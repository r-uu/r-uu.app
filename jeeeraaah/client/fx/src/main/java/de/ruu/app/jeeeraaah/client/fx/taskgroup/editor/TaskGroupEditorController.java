package de.ruu.app.jeeeraaah.client.fx.taskgroup.editor;

import de.ruu.app.jeeeraaah.client.fx.taskgroup.TaskGroupFXBean;
import de.ruu.lib.fx.comp.DefaultFXCViewController;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleObjectProperty;
import javafx.fxml.FXML;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;
import lombok.NonNull;

import java.util.Optional;

import static java.util.Objects.isNull;

/**
 * Java FX Component View Controller
 * <p>
 * generated by {@code de.ruu.lib.gen.java.fx.comp.GeneratorFXCViewController} at 2024.10.12 12:36:45:059
 */
class TaskGroupEditorController extends DefaultFXCViewController implements TaskGroupEditorService
{
	private ObjectProperty<TaskGroupFXBean> taskGroup;

	@FXML private Label lblName;
	@FXML private AnchorPane root;
	@FXML private TextField tfName;

	@Override @FXML protected void initialize()
	{
		taskGroup = new SimpleObjectProperty<>();
		taskGroup.addListener((obs, old, newValue) -> onTaskGroupChanged(newValue));
	}

	@Override public @NonNull Optional<TaskGroupFXBean> taskGroup() { return Optional.of(taskGroup.getValue()); }

	@Override public void taskGroup(@NonNull TaskGroupFXBean taskGroupFXBean) { this.taskGroup.set(taskGroupFXBean); }

	private void onTaskGroupChanged(TaskGroupFXBean newValue)
	{
		if (isNull(newValue))
		{
			tfName.setText(null);
		}
		else
		{
			tfName.textProperty().bindBidirectional(newValue.name());
		}
	}
}