<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>r-uu.app-demo-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<parent>
		<groupId>r-uu</groupId>
		<artifactId>r-uu.maven-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../../../r-uu.maven-parent</relativePath>
	</parent>

	<properties>
		<!-- overwrite possible definition of properties in parent modules -->
<!--		<maven.compiler.source></maven.compiler.source>-->
<!--		<maven.compiler.target></maven.compiler.target>-->
<!--		<maven.compiler.release>${java.version}</maven.compiler.release>-->
		<!-- Liberty configuration -->
		<liberty.var.http.port>9080</liberty.var.http.port>
		<liberty.var.https.port>9443</liberty.var.https.port>
	</properties>

	<dependencies>
		<!-- Provided dependencies -->
		<!-- IMPORTANT: Do _NOT_ include jakarta.jakartaee-api and microprofile dependencies. This will end up in a
		     nightmare of split packages and so on if java module system (JPMS) is in charge.
		 -->
<!--		<dependency>-->
<!--			<groupId>jakarta.platform</groupId>-->
<!--			<artifactId>jakarta.jakartaee-api</artifactId>-->
<!--			<scope>provided</scope>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.eclipse.microprofile</groupId>-->
<!--			<artifactId>microprofile</artifactId>-->
<!--			<type>pom</type>-->
<!--			<scope>provided</scope>-->
<!--		</dependency>-->
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.health</groupId>
			<artifactId>microprofile-health-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.metrics</groupId>
			<artifactId>microprofile-metrics-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.openapi</groupId>
			<artifactId>microprofile-openapi-api</artifactId>
		</dependency>

		<!-- own dependencies -->
        <dependency>
            <groupId>r-uu</groupId>
            <artifactId>r-uu.app-demo-common</artifactId>
        </dependency>
        <dependency>
            <groupId>r-uu</groupId>
            <artifactId>r-uu.app-datamodel-postaladdress-jpadto</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>r-uu</groupId>
            <artifactId>r-uu.app-datamodel-postaladdress-jpadto-ee</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- Enable liberty-maven plugin -->
			<plugin>
				<groupId>io.openliberty.tools</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<version>3.10.3</version>
				<configuration>
					<jvmOptions>--enable-preview</jvmOptions>
					<copyDependencies>
						<location>${project.build.directory}/liberty/wlp/usr/shared/resources</location>
						<dependency>
							<groupId>org.postgresql</groupId>
							<artifactId>postgresql</artifactId>
<!--							<version>42.7.3</version>-->
						</dependency>
					</copyDependencies>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- Plugin to run functional tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<http.port>${liberty.var.http.port}</http.port>
						<context.root>/</context.root>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>