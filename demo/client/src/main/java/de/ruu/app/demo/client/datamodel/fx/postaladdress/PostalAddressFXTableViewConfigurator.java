package de.ruu.app.demo.client.datamodel.fx.postaladdress;

import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.TextFieldTableCell;

/**
 * FXTableViewConfigurator {@link PostalAddressFXTableViewConfigurator}
 * <p>
 * generated by {@code de.ruu.lib.gen.java.fx.tableview.FXTableViewConfiguratorGenerator} at 2024.07.17 16:22:18:833
 */
public abstract class PostalAddressFXTableViewConfigurator
{
	public static void configure(TableView<PostalAddressFXBean> tableView)
	{
		tableView.getColumns().add(createColumnCountry());
		tableView.getColumns().add(createColumnType());
		tableView.getColumns().add(createColumnPostalCode());
		tableView.getColumns().add(createColumnStateOrProvince());
		tableView.getColumns().add(createColumnStreet());
		tableView.getColumns().add(createColumnStreetNumber());
		tableView.getColumns().add(createColumnCity());
	}
	
	private static TableColumn<PostalAddressFXBean, String> createColumnCountry()
	{
		TableColumn<PostalAddressFXBean, String> result = new TableColumn<>("country");
		result.setCellValueFactory(data -> data.getValue().country());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
	
	private static TableColumn<PostalAddressFXBean, String> createColumnType()
	{
		TableColumn<PostalAddressFXBean, String> result = new TableColumn<>("type");
		result.setCellValueFactory(data -> data.getValue().type());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
	
	private static TableColumn<PostalAddressFXBean, String> createColumnPostalCode()
	{
		TableColumn<PostalAddressFXBean, String> result = new TableColumn<>("postalCode");
		result.setCellValueFactory(data -> data.getValue().postalCode());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
	
	private static TableColumn<PostalAddressFXBean, String> createColumnStateOrProvince()
	{
		TableColumn<PostalAddressFXBean, String> result = new TableColumn<>("stateOrProvince");
		result.setCellValueFactory(data -> data.getValue().stateOrProvince());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
	
	private static TableColumn<PostalAddressFXBean, String> createColumnStreet()
	{
		TableColumn<PostalAddressFXBean, String> result = new TableColumn<>("street");
		result.setCellValueFactory(data -> data.getValue().street());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
	
	private static TableColumn<PostalAddressFXBean, String> createColumnStreetNumber()
	{
		TableColumn<PostalAddressFXBean, String> result = new TableColumn<>("streetNumber");
		result.setCellValueFactory(data -> data.getValue().streetNumber());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
	
	private static TableColumn<PostalAddressFXBean, String> createColumnCity()
	{
		TableColumn<PostalAddressFXBean, String> result = new TableColumn<>("city");
		result.setCellValueFactory(data -> data.getValue().city());
		result.setCellFactory(TextFieldTableCell.forTableColumn());
		return result;
	}
}